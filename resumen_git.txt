########## RESUMEN DE GIT ##########

# configuración inicial. Lo que corresponde al usuario es para ser cargada en el archivo de confirmaciones. El editor, indica, qué programa se abrirá para editar
git config --global user.name "alvin"
git config --global user.email alvin.portillo@gmail.com
git config --global core.editor nvim

# para listar la configuración
git config --list # para ver toda la lista de configuraciones
git config user.name # para ver un campo especifico de la configuración

# para obtener ayuda
git help <verb>
git <verb> --help
man git-<verb>

# para preparar la confirmación
git init # sirve para iniciar un repositorio
git clone https://github.com/AlvinPortillo/prueba_publico.git # clona un repositorio existente
git clone https://github.com/AlvinPortillo/prueba_publico.git  carpeta # igual que el anterior, pero establece el nombre del repositorio
git status # presenta un estado de los archivos dentro del repositorio
git status -s # es una version resumida de "git status"
git add resumen_git.txt # añade un archivo a la zona de "rastreados". Si un archivo ha sido modificado, añade este nuevo archivo modifcado para su seguimiento.
.gitignore # es el archivo que contendrá las expresiones regulares de los archivos que se van a ignorar en el rastreo.
git diff # muestra los cambios que han sido realizados y que no están preparados
git diff --staged # muestras los cambios realizados desde la última confirmación
git diff --cached # lo mismo que "git diff --staged"

# para confirmar
git commit # abrirá el editor designado en la configuración. Cuando se guarde este archivo, se abrá confirmado
git commit -v # igual que el anerior, pero en el archivo de salida mostrará un mayor detalle de los cambios
git commit -m "Mensaje de confirmacion" # confirma, y toma desde el comando el mensaje de confirmacion
git commit -a # automaticamente prepara todos los archivos rastreados, sin tener que pasar por "add"

# para borrar archivos del área de preparación
# si sólo se borra el archivo del directorio (disco duro) aparecerá como pendiente de confirmar
# se debe borrar del área de preparación
rm archivo_borrar.txt
git rm archivo_borrar.txt
# si sólo se quiere borrar el archivo del área de trabajo, sin borrar del disco, se saca del área de preparación
git rm --cached archivo_borrar.txt

# para renombar arcvivos, se usa el mismo comando de linux
git mv
#si sólo renombramos un archivo en el directorio, para quit equivale a
		1. Borrar el archivo anterior
		2. Encontrar un archivo nuevo, y por tanto se debe agregar (add)
mv archivo_borrar.txt borrar_archivo.txt
git rm archivo_borrar.txt
git add borrar_archivo.txt
# con git esto se resume en un solo paso
git mv borrar_archivo.txt archivo_borrar.txt

# para ver el historial de confirmaciones
git log # muestra las confirmaciones hechas en orden inverso (más reciente primero)
git log -p # muestra el historial de las confirmaciones y muestra las diferencias introducidas
git log -2 # muestra el historial de las últimas dos confirmaciones
git log --stat # muestra las confirmaciones pero incluye una estadística de las modificaciones
git log --pretty=oneline # la opción "pretty" da formato a la salida. Opciones de "pretty" pueden ser oneline, short, short, fuller o format (%h, %an, %ar, %s, etc.)
git log --pretty=format:"%h - %an, %ar : %s"
git log --pretty=format:"%h %s" --graph # incluye un gráfico de las confirmaciones
git log --since=1.days # también se pueden filtrar los resultados, por opciones en número de confirmaciones (usando <n> como el número entero) o con opciones temporales. También usando filtros como autor o committer (--author=alvin --committer=alvin).

# para deshacer cambios sobre la última confirmación. Es decir, no se pueden modificar confirmaciones previas a la última.
git commit --amend

# para deshacer cambios sobre el área de preparación, se pueden seguir las recomendaciones del mismo git
git restore --staged resumen_git.txt # esto quita el archivo resument_git.txt del area de preparación

# para trabajar con remotos
git remote # muestra el NOMBRE de los remotos que se tienen configurado. Debería aparecer al menos "remote"
git remote -v # muestra la dirección url de estos remotos configurados
# para agregar repositorios remotos "git remote add [nombre] [url]"
git remote add R_git https://github.com/AlvinPortillo/R.git
git fetch [remote name] # va al proyecto remoto y trae toda la información, ahora estará disponible 
# para poder enviar a los remotos
git push [nombre remoto] [nombre rama] # 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 (token actual)
# para inspeccionar remotos
git remote show [nombre remoto]
